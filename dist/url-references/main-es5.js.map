{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/firebase.service.ts","webpack:///src/app/references/list/list.component.ts","webpack:///src/app/references/list/list.component.html","webpack:///src/app/references/main-entry/main-entry.component.ts","webpack:///src/app/references/main-entry/main-entry.component.html","webpack:///src/app/references/modal/modal.component.ts","webpack:///src/app/references/modal/modal.component.html","webpack:///src/app/references/preview/preview.component.ts","webpack:///src/app/references/preview/preview.component.html","webpack:///src/app/references/reference.service.ts","webpack:///src/app/references/references-routing.module.ts","webpack:///src/app/references/references.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","m","ReferencesModule","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","initializeApp","firebaseConfig","declarations","providers","bootstrap","FirebaseService","db","collection","COLLECTION_PATH","doc","document","obj","update","list","FieldValue","arrayUnion","arrayRemove","providedIn","ListComponent","dialog","firebaseService","referenceService","route","snapshot","paramMap","get","columns","initValues","resources","getDocument","snapshotChanges","subscribe","payload","row","delete","open","width","isTextColumn","data","content","displayedColumns","map","c","title","find","type","TEXT","MainEntryComponent","router","result","structure","navigate","submit","ModalComponent","dialogRef","reference","JSON","parse","stringify","close","add","onNoClick","save","PreviewComponent","console","log","ColumnType","ReferenceService","component","ReferencesRoutingModule","forChild","entryComponents","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () =>\n        import('./references/references.module').then(m => m.ReferencesModule)\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n}\n","<div class=\"content\" role=\"main\">\n  <router-outlet></router-outlet>\n\n  <svg id=\"clouds\" alt=\"Gray Clouds Background\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2611.084\" height=\"485.677\" viewBox=\"0 0 2611.084 485.677\">\n    <path id=\"Path_39\" data-name=\"Path 39\" d=\"M2379.709,863.793c10-93-77-171-168-149-52-114-225-105-264,15-75,3-140,59-152,133-30,2.83-66.725,9.829-93.5,26.25-26.771-16.421-63.5-23.42-93.5-26.25-12-74-77-130-152-133-39-120-212-129-264-15-54.084-13.075-106.753,9.173-138.488,48.9-31.734-39.726-84.4-61.974-138.487-48.9-52-114-225-105-264,15a162.027,162.027,0,0,0-103.147,43.044c-30.633-45.365-87.1-72.091-145.206-58.044-52-114-225-105-264,15-75,3-140,59-152,133-53,5-127,23-130,83-2,42,35,72,70,86,49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33,61.112,8.015,113.854-5.72,150.492-29.764a165.62,165.62,0,0,0,110.861-3.236c47,94,178,113,251,33,31.385,4.116,60.563,2.495,86.487-3.311,25.924,5.806,55.1,7.427,86.488,3.311,73,80,204,61,251-33a165.625,165.625,0,0,0,120,0c51,13,108,15,157-5a147.188,147.188,0,0,0,33.5-18.694,147.217,147.217,0,0,0,33.5,18.694c49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33C2446.709,1093.793,2554.709,922.793,2379.709,863.793Z\" transform=\"translate(142.69 -634.312)\" fill=\"#eee\"/>\n  </svg>\n</div>\n","import { NgModule } from '@angular/core';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { environment } from '../environments/environment';\nimport { ReferencesModule } from './references/references.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFirestoreModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ReferencesModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport * as firebase from 'firebase/app';\nimport 'firebase/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n\n  private static COLLECTION_PATH = 'reference';\n\n  constructor(private db: AngularFirestore) {\n  }\n\n  getDocument(path: string) {\n    return this.db.collection(FirebaseService.COLLECTION_PATH).doc(path);\n  }\n\n  add(document: AngularFirestoreDocument<unknown>, obj: object) {\n    document.update({\n      list: firebase.firestore.FieldValue.arrayUnion(obj)\n    });\n  }\n\n  delete(document: AngularFirestoreDocument<unknown>, obj: object) {\n    document.update({\n      list: firebase.firestore.FieldValue.arrayRemove(obj)\n    });\n  }\n\n  /*getAvatars() {\n    return this.db.collection('/avatar').valueChanges()\n  }\n\n  getUser(userKey) {\n    return this.db.collection('users').doc(userKey).snapshotChanges();\n  }\n\n  updateUser(userKey, value) {\n    value.nameToSearch = value.name.toLowerCase();\n    return this.db.collection('users').doc(userKey).set(value);\n  }\n\n  deleteUser(userKey) {\n    return this.db.collection('users').doc(userKey).delete();\n  }\n\n  getUsers() {\n    return this.db.collection('users').snapshotChanges();\n  }\n\n  searchUsers(searchValue) {\n    return this.db.collection('users', ref => ref.where('nameToSearch', '>=', searchValue)\n    .where('nameToSearch', '<=', searchValue + '\\uf8ff'))\n    .snapshotChanges()\n  }\n\n  searchUsersByAge(value) {\n    return this.db.collection('users', ref => ref.orderBy('age').startAt(value)).snapshotChanges();\n  }\n\n\n  createUser(value, avatar) {\n    return this.db.collection('users').add({\n      name: value.name,\n      nameToSearch: value.name.toLowerCase(),\n      surname: value.surname,\n      age: parseInt(value.age),\n      avatar: avatar\n    });\n  }*/\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { FirebaseService } from '../../core/firebase.service';\nimport { Column, ColumnType, ReferenceService } from '../reference.service';\nimport { MatDialog } from '@angular/material';\nimport { ModalComponent } from '../modal/modal.component';\nimport { PreviewComponent } from '../preview/preview.component';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.sass']\n})\nexport class ListComponent implements OnInit {\n\n  displayedColumns: string[];\n  code: string;\n  columns: Column[];\n  isTextColumn: boolean;\n  resources: object[];\n\n  constructor(\n      public dialog: MatDialog,\n      private firebaseService: FirebaseService,\n      private referenceService: ReferenceService,\n      private route: ActivatedRoute\n  ) {\n    this.code = this.route.snapshot.paramMap.get('code');\n    if (referenceService.columns) {\n      this.initValues(referenceService.columns, referenceService.resources);\n    } else {\n      referenceService.document = firebaseService.getDocument(this.code);\n    }\n    referenceService.document.snapshotChanges().subscribe(\n        ({payload}) =>\n            this.initValues(payload.get('structure'), payload.get('list'))\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  delete(row: object) {\n    this.firebaseService.delete(this.referenceService.document, row);\n  }\n\n  add() {\n    this.dialog.open(ModalComponent, {\n      width: this.isTextColumn ? '500px' : '350px',\n      data: {\n        columns: this.columns,\n        data: {}\n      }\n    });\n  }\n\n  edit(row: object) {\n    this.dialog.open(ModalComponent, {\n      width: this.isTextColumn ? '500px' : '350px',\n      data: {\n        columns: this.columns,\n        data: row\n      }\n    });\n  }\n\n  view(content: string) {\n    this.dialog.open(PreviewComponent, {\n      width: '80%',\n      data: {\n        content\n      }\n    });\n  }\n\n  private initValues(columns: Column[], resources: object[]) {\n    this.columns = columns;\n    this.displayedColumns = ['no', ...columns.map(c => c.title), 'actions'];\n    this.resources = resources;\n    this.isTextColumn = !!this.columns.find(c => c.type === ColumnType.TEXT);\n  }\n}\n","<div class=\"content\">\n  <div>\n    <h1 [routerLink]=\"['/']\" class=\"mat-h1\">#{{code}}</h1>\n  </div>\n\n  <table mat-table [dataSource]=\"resources\" class=\"mat-elevation-z8\">\n    <ng-container matColumnDef=\"no\">\n      <th mat-header-cell *matHeaderCellDef> No.</th>\n      <td mat-cell *matCellDef=\"let index = index\"> {{index + 1}} </td>\n    </ng-container>\n\n    <ng-container *ngFor=\"let column of columns\" matColumnDef=\"{{column.title}}\">\n      <th mat-header-cell *matHeaderCellDef> {{column.title}}</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <img *ngIf=\"column.type === 'IMAGE'\" src=\"{{element[column.key]}}\" alt=\"Reference image\">\n        <a *ngIf=\"column.type === 'URL'\" href=\"{{element[column.key]}}\" target=\"_blank\">{{element[column.key]}}</a>\n        <span *ngIf=\"column.type !== 'IMAGE' && column.type !== 'URL'\">{{column.type === 'TEXT'? element[column.key].substring(0, 50) + ' ...' : element[column.key]}}</span>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>\n        <button mat-mini-fab color=\"primary\" aria-label=\"Add new URL\" (click)=\"add()\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n          <button mat-menu-item *ngIf=\"isTextColumn\" (click)=\"view(element.content)\">\n            <mat-icon>list_alt</mat-icon>\n            <span>View</span>\n          </button>\n          <button mat-menu-item (click)=\"edit(element)\">\n            <mat-icon>edit</mat-icon>\n            <span>Edit</span>\n          </button>\n          <button mat-menu-item (click)=\"delete(element)\">\n            <mat-icon>delete</mat-icon>\n            <span>Delete</span>\n          </button>\n        </mat-menu>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FirebaseService } from '../../core/firebase.service';\nimport { Column, ReferenceService } from '../reference.service';\n\n@Component({\n  selector: 'app-main-entry',\n  templateUrl: './main-entry.component.html',\n  styleUrls: ['./main-entry.component.sass']\n})\nexport class MainEntryComponent implements OnInit {\n\n  code: string;\n\n  constructor(\n      private firebaseService: FirebaseService,\n      private referenceService: ReferenceService,\n      private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  submit() {\n    const document = this.firebaseService.getDocument(this.code);\n    document.snapshotChanges().subscribe(result => {\n      const structure: Column[] = result.payload.get('structure');\n      if (structure) {\n        this.referenceService.document = document;\n        this.referenceService.columns = structure;\n        this.referenceService.resources = result.payload.get('list');\n        this.router.navigate([`/${this.code}`]);\n      }\n    });\n  }\n}\n","<div>\n  <h1 class=\"mat-display-2\">#code</h1>\n\n  <mat-form-field>\n    <input matInput [(ngModel)]=\"code\" (keydown.enter)=\"submit()\" />\n  </mat-form-field>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { Column, ReferenceService } from '../reference.service';\nimport { FirebaseService } from '../../core/firebase.service';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.sass']\n})\nexport class ModalComponent implements OnInit {\n\n  reference: object;\n\n  constructor(\n      public dialogRef: MatDialogRef<ModalComponent>,\n      @Inject(MAT_DIALOG_DATA) public data: {\n        columns: Column[],\n        data: object\n      },\n      private firebaseService: FirebaseService,\n      private referenceService: ReferenceService\n  ) {\n    this.reference = JSON.parse(JSON.stringify(data.data));\n  }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  save() {\n    this.firebaseService.delete(this.referenceService.document, this.data.data);\n    this.firebaseService.add(this.referenceService.document, this.reference);\n  }\n}\n","<h3 class=\"mat-h3\">Reference</h3>\n\n<div mat-dialog-content>\n  <mat-form-field class=\"full-width\" *ngFor=\"let column of  data.columns\">\n    <input matInput *ngIf=\"column.type !== 'TEXT'\" placeholder=\"{{column.title}}\" [(ngModel)]=\"reference[column.key]\" />\n    <textarea matInput *ngIf=\"column.type === 'TEXT'\" placeholder=\"{{column.title}}\" [(ngModel)]=\"reference[column.key]\"></textarea>\n  </mat-form-field>\n</div>\n\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">Cancel</button>\n  <button mat-button [mat-dialog-close]=\"data\" (click)=\"save()\">Save</button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-preview',\n  templateUrl: './preview.component.html',\n  styleUrls: ['./preview.component.sass']\n})\nexport class PreviewComponent implements OnInit {\n\n  constructor(\n      public dialogRef: MatDialogRef<PreviewComponent>,\n      @Inject(MAT_DIALOG_DATA) public data: {\n        content: string\n      }\n  ) {\n    console.log(data);\n  }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<pre>\n  <code [innerHTML]=\"data.content\"></code>\n</pre>\n","import { Injectable } from '@angular/core';\nimport { AngularFirestoreDocument } from '@angular/fire/firestore';\n\nexport enum ColumnType {\n  IMAGE = 'IMAGE',\n  TITLE = 'TITLE',\n  DESCRIPTION = 'DESCRIPTION',\n  TEXT = 'TEXT'\n}\n\nexport interface Column {\n  key: string;\n  title: string;\n  type: ColumnType;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReferenceService {\n\n  document: AngularFirestoreDocument<unknown>;\n  resources: object[];\n  columns: Column[];\n\n  constructor() {\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListComponent } from './list/list.component';\nimport { MainEntryComponent } from './main-entry/main-entry.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainEntryComponent\n  },\n  {\n    path: ':code',\n    component: ListComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ReferencesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatDialogModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatMenuModule,\n  MatTableModule\n} from '@angular/material';\n\nimport { ListComponent } from './list/list.component';\nimport { MainEntryComponent } from './main-entry/main-entry.component';\nimport { ModalComponent } from './modal/modal.component';\nimport { ReferencesRoutingModule } from './references-routing.module';\nimport { PreviewComponent } from './preview/preview.component';\n\n@NgModule({\n  declarations: [ListComponent, MainEntryComponent, ModalComponent, PreviewComponent],\n  exports: [\n    ListComponent\n  ],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatIconModule,\n    MatButtonModule,\n    MatDialogModule,\n    ReferencesRoutingModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    MatMenuModule,\n  ],\n  entryComponents: [\n    ModalComponent,\n    PreviewComponent\n  ]\n})\nexport class ReferencesModule { }\n","export const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: 'AIzaSyCaA735lDbPkkZn5yPvOHeJ7e8nm-JO-t4',\n    authDomain: 'url-reference-list.firebaseapp.com',\n    databaseURL: 'https://url-reference-list.firebaseio.com',\n    projectId: 'url-reference-list',\n    storageBucket: 'url-reference-list.appspot.com',\n    messagingSenderId: '1027022492637',\n    appId: '1:1027022492637:web:2b17bca0659556cce91c34',\n    measurementId: 'G-XRV5GJFMNH'\n  }\n};\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}