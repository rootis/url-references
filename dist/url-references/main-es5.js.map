{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/auth.service.ts","webpack:///src/app/core/firebase.service.ts","webpack:///src/app/references/list/list.component.ts","webpack:///src/app/references/list/list.component.html","webpack:///src/app/references/main-entry/main-entry.component.ts","webpack:///src/app/references/main-entry/main-entry.component.html","webpack:///src/app/references/modal/modal.component.ts","webpack:///src/app/references/modal/modal.component.html","webpack:///src/app/references/preview/preview.component.ts","webpack:///src/app/references/preview/preview.component.html","webpack:///src/app/references/reference.service.ts","webpack:///src/app/references/references-routing.module.ts","webpack:///src/app/references/references.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","m","ReferencesModule","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","initializeApp","firebaseConfig","declarations","providers","bootstrap","AuthService","afAuth","reject","provider","GoogleAuthProvider","addScope","auth","signInWithPopup","res","err","console","log","onAuthStateChanged","u","user","getUser","obj","providerData","email","providedIn","FirebaseService","db","document","entity","firestore","runTransaction","t","get","ref","doc","exists","entities","index","findIndex","i","update","list","collection","COLLECTION_PATH","createId","FieldValue","arrayUnion","add","arrayRemove","ListComponent","dialog","firebaseService","referenceService","route","authService","snackBar","snapshot","paramMap","columns","setValues","resources","getDocument","snapshotChanges","subscribe","payload","type","TEXT","TITLE","DESCRIPTION","row","delete","open","width","isTextColumn","data","content","voteEntity","getCurrentUserEmail","addVote","catch","doGoogleLogin","a","additionalUserInfo","profile","votedPeople","showToast","votes","Object","length","message","duration","verticalPosition","displayedColumns","map","c","title","sort","compare","forEach","VOTE","isVoteColumn","b","MainEntryComponent","router","result","structure","navigate","submit","ModalComponent","dialogRef","filter","reference","JSON","parse","stringify","close","save","onNoClick","PreviewComponent","ColumnType","ReferenceService","component","ReferencesRoutingModule","forChild","entryComponents","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () =>\n        import('./references/references.module').then(m => m.ReferencesModule)\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n}\n","<div class=\"content\" role=\"main\">\n  <router-outlet></router-outlet>\n\n  <svg id=\"clouds\" alt=\"Gray Clouds Background\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2611.084\" height=\"485.677\" viewBox=\"0 0 2611.084 485.677\">\n    <path id=\"Path_39\" data-name=\"Path 39\" d=\"M2379.709,863.793c10-93-77-171-168-149-52-114-225-105-264,15-75,3-140,59-152,133-30,2.83-66.725,9.829-93.5,26.25-26.771-16.421-63.5-23.42-93.5-26.25-12-74-77-130-152-133-39-120-212-129-264-15-54.084-13.075-106.753,9.173-138.488,48.9-31.734-39.726-84.4-61.974-138.487-48.9-52-114-225-105-264,15a162.027,162.027,0,0,0-103.147,43.044c-30.633-45.365-87.1-72.091-145.206-58.044-52-114-225-105-264,15-75,3-140,59-152,133-53,5-127,23-130,83-2,42,35,72,70,86,49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33,61.112,8.015,113.854-5.72,150.492-29.764a165.62,165.62,0,0,0,110.861-3.236c47,94,178,113,251,33,31.385,4.116,60.563,2.495,86.487-3.311,25.924,5.806,55.1,7.427,86.488,3.311,73,80,204,61,251-33a165.625,165.625,0,0,0,120,0c51,13,108,15,157-5a147.188,147.188,0,0,0,33.5-18.694,147.217,147.217,0,0,0,33.5,18.694c49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33C2446.709,1093.793,2554.709,922.793,2379.709,863.793Z\" transform=\"translate(142.69 -634.312)\" fill=\"#eee\"/>\n  </svg>\n</div>\n","import { NgModule } from '@angular/core';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { environment } from '../environments/environment';\nimport { ReferencesModule } from './references/references.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ReferencesModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport * as firebase from 'firebase/app';\n\ninterface User {\n  email: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private afAuth: AngularFireAuth) {\n  }\n\n  doGoogleLogin() {\n    return new Promise<any>((resolve, reject) => {\n      const provider = new firebase.auth.GoogleAuthProvider();\n      provider.addScope('email');\n      this.afAuth.auth.signInWithPopup(provider)\n      .then(res => resolve(res), err => {\n        console.log(err);\n        reject(err);\n      });\n    });\n  }\n\n  getCurrentUserEmail() {\n    return new Promise<any>((resolve, reject) => {\n      firebase.auth().onAuthStateChanged(u => {\n        const user = this.getUser(u);\n        if (user) {\n          resolve(user);\n        } else {\n          reject('No logged in user');\n        }\n      });\n    });\n  }\n\n  private getUser(obj: { providerData: { email: string }[] }) {\n    if (obj && obj.providerData && obj.providerData[0] && obj.providerData[0].email) {\n      return {\n        email: obj.providerData[0].email\n      };\n    } else {\n      return null;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport * as firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nexport interface Entity {\n  id?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n\n  private static COLLECTION_PATH = 'reference';\n\n  constructor(private db: AngularFirestore) {\n  }\n\n  update(document: AngularFirestoreDocument<unknown>, entity: Entity) {\n      return this.db.firestore.runTransaction(t =>\n        t.get(document.ref).then((doc) => {\n          if (!doc.exists) {\n            throw new Error('Document does not exist!');\n          }\n\n          const entities: Entity[] = doc.get('list');\n          const index = entities.findIndex(i => i.id === entity.id);\n\n          if (index === -1) {\n            throw new Error('Object in array does not exist!');\n          }\n\n          entities[index] = entity;\n\n          t.update(document.ref, {\n            list: entities\n          });\n        })\n      );\n  }\n\n  getDocument(path: string) {\n    return this.db.collection(FirebaseService.COLLECTION_PATH).doc(path);\n  }\n\n  add(document: AngularFirestoreDocument<unknown>, entity: Entity) {\n    entity.id = this.db.createId();\n\n    document.update({\n      list: firebase.firestore.FieldValue.arrayUnion(entity)\n    });\n  }\n\n  save(document: AngularFirestoreDocument<unknown>, entity: Entity) {\n    if (entity && entity.id) {\n      this.update(document, entity);\n    } else {\n      this.add(document, entity);\n    }\n  }\n\n  delete(document: AngularFirestoreDocument<unknown>, obj: object) {\n    document.update({\n      list: firebase.firestore.FieldValue.arrayRemove(obj)\n    });\n  }\n\n  /*getAvatars() {\n    return this.db.collection('/avatar').valueChanges()\n  }\n\n  getUser(userKey) {\n    return this.db.collection('users').doc(userKey).snapshotChanges();\n  }\n\n  updateUser(userKey, value) {\n    value.nameToSearch = value.name.toLowerCase();\n    return this.db.collection('users').doc(userKey).set(value);\n  }\n\n  deleteUser(userKey) {\n    return this.db.collection('users').doc(userKey).delete();\n  }\n\n  getUsers() {\n    return this.db.collection('users').snapshotChanges();\n  }\n\n  searchUsers(searchValue) {\n    return this.db.collection('users', ref => ref.where('nameToSearch', '>=', searchValue)\n    .where('nameToSearch', '<=', searchValue + '\\uf8ff'))\n    .snapshotChanges()\n  }\n\n  searchUsersByAge(value) {\n    return this.db.collection('users', ref => ref.orderBy('age').startAt(value)).snapshotChanges();\n  }\n\n\n  createUser(value, avatar) {\n    return this.db.collection('users').add({\n      name: value.name,\n      nameToSearch: value.name.toLowerCase(),\n      surname: value.surname,\n      age: parseInt(value.age),\n      avatar: avatar\n    });\n  }*/\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog, MatSnackBar } from '@angular/material';\n\nimport { Entity, FirebaseService } from '../../core/firebase.service';\nimport { Column, ColumnType, ReferenceService } from '../reference.service';\nimport { ModalComponent } from '../modal/modal.component';\nimport { PreviewComponent } from '../preview/preview.component';\nimport { AuthService } from '../../core/auth.service';\nimport { User } from 'firebase';\n\ninterface VoteEntity extends Entity {\n  votedPeople: {[key: string]: boolean};\n  votes: number;\n}\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.sass']\n})\nexport class ListComponent implements OnInit {\n\n  displayedColumns: string[];\n  code: string;\n  columns: Column[];\n  isTextColumn: boolean;\n  isVoteColumn: boolean;\n  resources: VoteEntity[];\n\n  constructor(\n      public dialog: MatDialog,\n      private firebaseService: FirebaseService,\n      private referenceService: ReferenceService,\n      private route: ActivatedRoute,\n      private authService: AuthService,\n      private snackBar: MatSnackBar\n  ) {\n    this.code = this.route.snapshot.paramMap.get('code');\n    if (referenceService.columns) {\n      this.setValues(referenceService.columns, referenceService.resources as VoteEntity[]);\n    } else {\n      referenceService.document = firebaseService.getDocument(this.code);\n    }\n    referenceService.document.snapshotChanges().subscribe(\n        ({payload}) =>\n            this.setValues(payload.get('structure'), payload.get('list'))\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  isTextualColumn(type: ColumnType) {\n    return type === ColumnType.TEXT ||\n        type === ColumnType.TITLE ||\n        type === ColumnType.DESCRIPTION;\n  }\n\n  delete(row: object) {\n    this.firebaseService.delete(this.referenceService.document, row);\n  }\n\n  add() {\n    this.dialog.open(ModalComponent, {\n      width: this.isTextColumn ? '500px' : '350px',\n      data: {\n        columns: this.columns,\n        data: {}\n      }\n    });\n  }\n\n  edit(row: object) {\n    this.dialog.open(ModalComponent, {\n      width: this.isTextColumn ? '500px' : '350px',\n      data: {\n        columns: this.columns,\n        data: row\n      }\n    });\n  }\n\n  view(content: string) {\n    this.dialog.open(PreviewComponent, {\n      width: '80%',\n      data: {\n        content\n      }\n    });\n  }\n\n  vote(voteEntity: VoteEntity) {\n    this.authService.getCurrentUserEmail()\n      .then((user: User) => this.addVote(voteEntity, user.email))\n      .catch(err => {\n        console.log(err);\n        this.authService.doGoogleLogin().then(a => console.log(a.additionalUserInfo.profile.email));\n      });\n  }\n\n  private addVote(voteEntity: VoteEntity, email: string) {\n    if (voteEntity.votedPeople) {\n      if (voteEntity.votedPeople[email] === true) {\n        this.showToast('Only one vote is allowed... :(');\n        return;\n      }\n    } else {\n      voteEntity.votedPeople = {};\n    }\n\n    voteEntity.votedPeople[email] = true;\n    voteEntity.votes = Object.keys(voteEntity.votedPeople).length;\n\n    this.firebaseService.update(this.referenceService.document, voteEntity)\n      .then(() => this.showToast('Your vote was added! :)'))\n      .catch(err => {\n        this.showToast('Something went wrong... :(');\n        console.log(err);\n      });\n  }\n\n  private showToast(message: string) {\n    this.snackBar.open(message, null, {\n      duration: 4000,\n      verticalPosition: 'top'\n    });\n  }\n\n  private setValues(columns: Column[], resources: VoteEntity[]) {\n    this.columns = columns;\n    this.displayedColumns = ['no', ...columns.map(c => c.title), 'actions'];\n    this.resources = resources.sort(this.compare);\n    this.columns.forEach(({ type }) => {\n      if (type === ColumnType.TEXT) {\n        this.isTextColumn = true;\n      } else if (type === ColumnType.VOTE) {\n        this.isVoteColumn = true;\n      }\n    });\n  }\n\n  private compare(a: VoteEntity, b: VoteEntity) {\n    a.votes = a.votes || 0;\n    b.votes = b.votes || 0;\n\n    return (a.votes < b.votes) ? 1 : a.votes > b.votes ? -1 : 0;\n  }\n}\n","<div class=\"content\">\n  <div>\n    <h1 [routerLink]=\"['/']\" class=\"mat-h1\">#{{code}}</h1>\n  </div>\n\n  <table mat-table [dataSource]=\"resources\" class=\"mat-elevation-z8\">\n    <ng-container matColumnDef=\"no\">\n      <th mat-header-cell *matHeaderCellDef> No.</th>\n      <td mat-cell *matCellDef=\"let index = index\"> {{index + 1}} </td>\n    </ng-container>\n\n    <ng-container *ngFor=\"let column of columns\" matColumnDef=\"{{column.title}}\">\n      <th mat-header-cell *matHeaderCellDef> {{column.title}}</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <img *ngIf=\"column.type === 'IMAGE'\" src=\"{{element[column.key]}}\" alt=\"Reference image\">\n        <a *ngIf=\"column.type === 'URL'\" href=\"{{element[column.key]}}\" target=\"_blank\">{{element[column.key]}}</a>\n        <span *ngIf=\"column.type === 'VOTE'\">{{element[column.key] || 0}}</span>\n        <span *ngIf=\"isTextualColumn(column.type)\">{{column.type === 'TEXT'? element[column.key].substring(0, 50) + ' ...' : element[column.key]}}</span>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef>\n        <button mat-mini-fab color=\"primary\" aria-label=\"Add new URL\" (click)=\"add()\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n          <button mat-menu-item *ngIf=\"isTextColumn\" (click)=\"view(element.content)\">\n            <mat-icon>list_alt</mat-icon>\n            <span>View</span>\n          </button>\n          <button mat-menu-item *ngIf=\"isVoteColumn\" (click)=\"vote(element)\">\n            <mat-icon>how_to_vote</mat-icon>\n            <span>Vote</span>\n          </button>\n          <button mat-menu-item (click)=\"edit(element)\">\n            <mat-icon>edit</mat-icon>\n            <span>Edit</span>\n          </button>\n          <button mat-menu-item (click)=\"delete(element)\">\n            <mat-icon>delete</mat-icon>\n            <span>Delete</span>\n          </button>\n        </mat-menu>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FirebaseService } from '../../core/firebase.service';\nimport { Column, ReferenceService } from '../reference.service';\n\n@Component({\n  selector: 'app-main-entry',\n  templateUrl: './main-entry.component.html',\n  styleUrls: ['./main-entry.component.sass']\n})\nexport class MainEntryComponent implements OnInit {\n\n  code: string;\n\n  constructor(\n      private firebaseService: FirebaseService,\n      private referenceService: ReferenceService,\n      private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  submit() {\n    const document = this.firebaseService.getDocument(this.code);\n    document.snapshotChanges().subscribe(result => {\n      const structure: Column[] = result.payload.get('structure');\n      if (structure) {\n        this.referenceService.document = document;\n        this.referenceService.columns = structure;\n        this.referenceService.resources = result.payload.get('list');\n        this.router.navigate([`/${this.code}`]);\n      }\n    });\n  }\n}\n","<div>\n  <h1 class=\"mat-display-2\">#code</h1>\n\n  <mat-form-field>\n    <input matInput [(ngModel)]=\"code\" (keydown.enter)=\"submit()\" />\n  </mat-form-field>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { Column, ColumnType, ReferenceService } from '../reference.service';\nimport { FirebaseService } from '../../core/firebase.service';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.sass']\n})\nexport class ModalComponent implements OnInit {\n\n  columns: Column[];\n  reference: object;\n\n  constructor(\n      public dialogRef: MatDialogRef<ModalComponent>,\n      @Inject(MAT_DIALOG_DATA) public data: {\n        columns: Column[],\n        data: object\n      },\n      private firebaseService: FirebaseService,\n      private referenceService: ReferenceService\n  ) {\n    this.columns = data.columns.filter(c => c.type !== ColumnType.VOTE);\n    this.reference = JSON.parse(JSON.stringify(data.data));\n  }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  save() {\n    this.firebaseService.save(this.referenceService.document, this.reference);\n  }\n}\n","<h3 class=\"mat-h3\">Reference</h3>\n\n<div mat-dialog-content>\n  <mat-form-field class=\"full-width\" *ngFor=\"let column of  columns\">\n    <input matInput *ngIf=\"column.type !== 'TEXT'\" placeholder=\"{{column.title}}\" [(ngModel)]=\"reference[column.key]\" />\n    <textarea matInput *ngIf=\"column.type === 'TEXT'\" placeholder=\"{{column.title}}\" [(ngModel)]=\"reference[column.key]\"></textarea>\n  </mat-form-field>\n</div>\n\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">Cancel</button>\n  <button mat-button [mat-dialog-close]=\"data\" (click)=\"save()\">Save</button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-preview',\n  templateUrl: './preview.component.html',\n  styleUrls: ['./preview.component.sass']\n})\nexport class PreviewComponent implements OnInit {\n\n  constructor(\n      public dialogRef: MatDialogRef<PreviewComponent>,\n      @Inject(MAT_DIALOG_DATA) public data: {\n        content: string\n      }\n  ) {\n    console.log(data);\n  }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<pre>\n  <code [innerHTML]=\"data.content\"></code>\n</pre>\n","import { Injectable } from '@angular/core';\nimport { AngularFirestoreDocument } from '@angular/fire/firestore';\n\nexport enum ColumnType {\n  IMAGE = 'IMAGE',\n  TITLE = 'TITLE',\n  DESCRIPTION = 'DESCRIPTION',\n  TEXT = 'TEXT',\n  VOTE = 'VOTE'\n}\n\nexport interface Column {\n  key: string;\n  title: string;\n  type: ColumnType;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReferenceService {\n\n  document: AngularFirestoreDocument<unknown>;\n  resources: object[];\n  columns: Column[];\n\n  constructor() {\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListComponent } from './list/list.component';\nimport { MainEntryComponent } from './main-entry/main-entry.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainEntryComponent\n  },\n  {\n    path: ':code',\n    component: ListComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ReferencesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatDialogModule,\n  MatSnackBarModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatMenuModule,\n  MatTableModule\n} from '@angular/material';\n\nimport { ListComponent } from './list/list.component';\nimport { MainEntryComponent } from './main-entry/main-entry.component';\nimport { ModalComponent } from './modal/modal.component';\nimport { ReferencesRoutingModule } from './references-routing.module';\nimport { PreviewComponent } from './preview/preview.component';\n\n@NgModule({\n  declarations: [ListComponent, MainEntryComponent, ModalComponent, PreviewComponent],\n  exports: [\n    ListComponent\n  ],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatIconModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    ReferencesRoutingModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    MatMenuModule,\n  ],\n  entryComponents: [\n    ModalComponent,\n    PreviewComponent\n  ]\n})\nexport class ReferencesModule { }\n","export const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: 'AIzaSyCaA735lDbPkkZn5yPvOHeJ7e8nm-JO-t4',\n    authDomain: 'url-reference-list.firebaseapp.com',\n    databaseURL: 'https://url-reference-list.firebaseio.com',\n    projectId: 'url-reference-list',\n    storageBucket: 'url-reference-list.appspot.com',\n    messagingSenderId: '1027022492637',\n    appId: '1:1027022492637:web:2b17bca0659556cce91c34',\n    measurementId: 'G-XRV5GJFMNH'\n  }\n};\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}